leetcode: 815.公交路线
tag: bfs

problem: 给你一个数组 routes ，表示一系列公交线路，其中每个 routes[i] 
         表示一条公交线路，第 i 辆公交车将会在上面循环行驶。

         例如，路线 routes[0] = [1, 5, 7] 表示第 0 辆公交车会一直按序列 1 -> 5 -> 7 -> 1 -> 5 -> 7 -> 1 -> ... 这样的车站路线行驶。
         现在从 source 车站出发（初始时不在公交车上），要前往 target 车站。 期间仅可乘坐公交车。

         求出 最少乘坐的公交车数量 。如果不可能到达终点车站，返回 -1 。

tips: 1 <= routes.length <= 500
      1 <= routes[i].length <= 10^5
      routes[i] 中的所有值 互不相同
      sum(routes[i].length) <= 10^5
      0 <= routes[i][j] < 10^6
      0 <= source, target < 10^6

conclusion: 本题思路上其实很简单，就是一般的BFS。重点在于考察数据规模对算法复杂度的影响。1.在给出数据规模的提示下可以看到 总的站数(不去重) m<=10^5,因此限制每一条的路线的包含站数不会超过m/n; 2.本题可以以站作为状态进行bfs，也可以以路线作为状态进行bfs，但可以看到站的规模远大于线路的规模，仔细分析两种算法，不难得到以路线作为状态进行bfs更优。



